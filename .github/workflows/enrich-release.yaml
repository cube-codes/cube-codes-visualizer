name: Enrich Release
on:
  release:
    types: [created]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: bruceadams/get-release@v1.2.1
      id: get_release
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
        registry-url: 'https://registry.npmjs.org'
    - run: npm --no-git-tag-version version ${{ steps.get_release.outputs.tag_name }}
    - run: npm run ci-release
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./dist/docs.zip
        asset_name: cube-codes-visualizer-${{ steps.get_release.outputs.tag_name }}-docs.zip
        asset_content_type: application/zip
    - uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./dist/browser/cube-codes-visualizer.js
        asset_name: cube-codes-visualizer-${{ steps.get_release.outputs.tag_name }}-browser.js
        asset_content_type: application/javascript
    - uses: actions/checkout@v2
      with:
        ref: web
        path: web
    - run: mkdir -p ./web/releases/${{ steps.get_release.outputs.tag_name }}
    - run: cp ./dist/docs.zip ./web/releases/${{ steps.get_release.outputs.tag_name }}/cube-codes-visualizer-${{ steps.get_release.outputs.tag_name }}-docs.zip
    - run: cp ./dist/browser/cube-codes-visualizer.js ./web/releases/${{ steps.get_release.outputs.tag_name }}/cube-codes-visualizer-${{ steps.get_release.outputs.tag_name }}-browser.js
    - run: cp ./dist/browser/cube-codes-visualizer.js ./web/releases/${{ steps.get_release.outputs.tag_name }}/browser.js
    - run: cp -R ./dist/docs ./web/releases/${{ steps.get_release.outputs.tag_name }}/
    - run: |
        cd web
        git config --global user.name 'CI'
        git config --global user.email 'info@cube.codes'
        git add .
        git commit -am "Add release ${{ steps.get_release.outputs.tag_name }}"
        git push